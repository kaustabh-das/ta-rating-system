{"version":3,"file":"utils-CsyM6iPT.js","sources":["../../js/ui-utils.js","../../js/date-utils.js"],"sourcesContent":["// Loading and UI Utilities\nclass UIUtils {\n    // Loading overlay functions\n    static showLoading(message = 'Loading data...') {\n        const messageElement = domElements.loadingOverlay.querySelector('p');\n        if (messageElement) {\n            messageElement.textContent = message;\n        }\n        domElements.loadingOverlay.classList.add('active');\n    }\n\n    static hideLoading() {\n        domElements.loadingOverlay.classList.remove('active');\n    }\n\n    // Error display functions\n    static showError(errorElement, message) {\n        errorElement.textContent = message;\n        errorElement.style.display = 'block';\n    }\n\n    static hideError(errorElement) {\n        errorElement.style.display = 'none';\n    }\n\n    static showDateError(message) {\n        UIUtils.showError(domElements.dateRangeError, message);\n    }\n\n    // Form utilities\n    static resetForm(form) {\n        if (form) {\n            form.reset();\n            // Also clear any error highlighting when form is reset\n            UIUtils.clearFormErrorHighlighting(form);\n        }\n    }\n\n    // Clear error highlighting from a specific form\n    static clearFormErrorHighlighting(form) {\n        if (!form) return;\n        \n        // Remove error class from all rating groups within this form\n        form.querySelectorAll('.rating-group.error').forEach(group => {\n            group.classList.remove('error');\n        });\n        \n        // Remove error class from form groups (comments) within this form\n        form.querySelectorAll('.form-group.error').forEach(group => {\n            group.classList.remove('error');\n        });\n    }\n\n    static validateRequiredFields(fields) {\n        let hasError = false;\n        \n        fields.forEach(field => {\n            if (!field.value.trim()) {\n                UIUtils.showError(field.errorElement, field.message || 'This field is required');\n                hasError = true;\n            } else {\n                UIUtils.hideError(field.errorElement);\n            }\n        });\n\n        return !hasError;\n    }\n\n    // Body style utilities\n    static setCenteredBodyStyle() {\n        domElements.setBodyStyle('centered', {\n            display: 'flex',\n            height: '100vh',\n            alignItems: 'center',\n            justifyContent: 'center'\n        });\n    }\n\n    static setScrollableBodyStyle() {\n        domElements.setBodyStyle('', {\n            display: 'block',\n            height: 'auto',\n            minHeight: '100vh',\n            overflow: 'auto'\n        });\n    }\n\n    // Create star rating display\n    static createStarRating(rating, maxRating = 5) {\n        let starsHtml = '';\n        for (let i = 1; i <= maxRating; i++) {\n            if (i <= rating) {\n                starsHtml += '<span style=\"color: #ffc107;\">★</span>';\n            } else {\n                starsHtml += '<span style=\"color: #e9ecef;\">★</span>';\n            }\n        }\n        starsHtml += ` (${rating}/${maxRating})`;\n        return starsHtml;\n    }\n\n    // Create table for ratings display\n    static createRatingTable(ratings, categories = RATING_CATEGORIES) {\n        const table = document.createElement('table');\n        table.style.width = '100%';\n        table.style.borderCollapse = 'collapse';\n        table.style.marginBottom = '15px';\n        \n        const thead = document.createElement('thead');\n        const headerRow = document.createElement('tr');\n        \n        const categoryHeader = document.createElement('th');\n        categoryHeader.textContent = 'Category';\n        categoryHeader.style.border = '1px solid #ddd';\n        categoryHeader.style.padding = '10px';\n        categoryHeader.style.backgroundColor = '#e9ecef';\n        categoryHeader.style.textAlign = 'left';\n        \n        const ratingHeader = document.createElement('th');\n        ratingHeader.textContent = 'Rating';\n        ratingHeader.style.border = '1px solid #ddd';\n        ratingHeader.style.padding = '10px';\n        ratingHeader.style.backgroundColor = '#e9ecef';\n        ratingHeader.style.textAlign = 'center';\n        \n        headerRow.appendChild(categoryHeader);\n        headerRow.appendChild(ratingHeader);\n        thead.appendChild(headerRow);\n        table.appendChild(thead);\n        \n        const tbody = document.createElement('tbody');\n        \n        categories.forEach(category => {\n            const row = document.createElement('tr');\n            \n            const categoryCell = document.createElement('td');\n            categoryCell.textContent = category.label;\n            categoryCell.style.border = '1px solid #ddd';\n            categoryCell.style.padding = '10px';\n            \n            const ratingCell = document.createElement('td');\n            const ratingValue = ratings[category.key] || 0;\n            ratingCell.style.border = '1px solid #ddd';\n            ratingCell.style.padding = '10px';\n            ratingCell.style.textAlign = 'center';\n            ratingCell.innerHTML = UIUtils.createStarRating(ratingValue);\n            \n            row.appendChild(categoryCell);\n            row.appendChild(ratingCell);\n            tbody.appendChild(row);\n        });\n        \n        table.appendChild(tbody);\n        return table;\n    }\n\n    // Dropdown utilities\n    static createDropdown(options, onSelect, placeholder = 'Select...', disableIfSingle = false) {\n        const dropdownContainer = document.createElement('div');\n        dropdownContainer.className = 'dropdown-container';\n        \n        const dropdownButton = document.createElement('button');\n        dropdownButton.type = 'button';\n        dropdownButton.className = 'dropdown-btn';\n        \n        // Check if dropdown should be disabled due to single option\n        const shouldDisable = disableIfSingle && options.length <= 1;\n        \n        if (shouldDisable) {\n            // Remove arrow from placeholder and disable interaction\n            const cleanPlaceholder = placeholder.replace(' ▼', '').replace('▼', '');\n            dropdownButton.textContent = cleanPlaceholder;\n            dropdownButton.style.cursor = 'default';\n            dropdownButton.style.opacity = '1'; // Keep it visible but not interactive\n            dropdownButton.disabled = true;\n        } else {\n            dropdownButton.textContent = placeholder; // Keep original behavior\n        }\n        \n        const dropdownMenu = document.createElement('div');\n        dropdownMenu.className = 'dropdown-menu';\n        dropdownMenu.style.display = 'none';\n        \n        // Populate dropdown menu\n        options.forEach((option, index) => {\n            const menuItem = document.createElement('div');\n            menuItem.className = 'dropdown-item';\n            menuItem.textContent = option.text;\n            \n            menuItem.addEventListener('click', function() {\n                if (shouldDisable) return; // Prevent interaction if disabled\n                \n                // Check if the placeholder already had an arrow and preserve it\n                const hasArrow = placeholder.includes('▼');\n                dropdownButton.textContent = hasArrow ? option.text + ' ▼' : option.text;\n                dropdownMenu.style.display = 'none';\n                onSelect(option);\n            });\n            \n            dropdownMenu.appendChild(menuItem);\n        });\n        \n        // Dropdown toggle functionality\n        dropdownButton.addEventListener('click', function(e) {\n            if (shouldDisable) return; // Prevent interaction if disabled\n            \n            e.stopPropagation();\n            const isVisible = dropdownMenu.style.display === 'block';\n            dropdownMenu.style.display = isVisible ? 'none' : 'block';\n        });\n        \n        // Close dropdown when clicking outside\n        document.addEventListener('click', function() {\n            dropdownMenu.style.display = 'none';\n        });\n        \n        dropdownContainer.appendChild(dropdownButton);\n        dropdownContainer.appendChild(dropdownMenu);\n        \n        return { container: dropdownContainer, button: dropdownButton, menu: dropdownMenu };\n    }\n\n    // Create modern card-based rating display\n    static createModernRatingDisplay(ratings, raterInfo, categories = RATING_CATEGORIES, comments = null) {\n        const container = document.createElement('div');\n        container.className = 'rating-details-modern';\n        \n        // Create two-column layout container\n        const twoColumnContainer = document.createElement('div');\n        twoColumnContainer.className = 'rating-details-two-column';\n        \n        // Left container - Rating info header\n        const leftContainer = document.createElement('div');\n        leftContainer.className = 'rating-info-container';\n        \n        const infoHeader = document.createElement('div');\n        infoHeader.className = 'rating-info-header';\n        \n        const raterRow = document.createElement('div');\n        raterRow.className = 'info-row';\n        const raterLabel = document.createElement('span');\n        raterLabel.className = 'info-label';\n        raterLabel.textContent = 'RATED BY:';\n        const raterValue = document.createElement('span');\n        raterValue.className = 'info-value';\n        raterValue.textContent = `${raterInfo.name}`;\n        const raterType = document.createElement('span');\n        raterType.className = 'info-subvalue';\n        raterType.textContent = `(${raterInfo.type})`;\n        raterRow.appendChild(raterLabel);\n        raterRow.appendChild(raterValue);\n        raterRow.appendChild(raterType);\n        \n        const dateRow = document.createElement('div');\n        dateRow.className = 'info-row';\n        const dateLabel = document.createElement('span');\n        dateLabel.className = 'info-label';\n        dateLabel.textContent = 'DATE:';\n        const dateValue = document.createElement('span');\n        dateValue.className = 'info-value';\n        dateValue.textContent = raterInfo.date;\n        dateRow.appendChild(dateLabel);\n        dateRow.appendChild(dateValue);\n        \n        infoHeader.appendChild(raterRow);\n        infoHeader.appendChild(dateRow);\n        leftContainer.appendChild(infoHeader);\n        \n        // Right container - Rating categories (individual cards)\n        const rightContainer = document.createElement('div');\n        rightContainer.className = 'rating-categories-container';\n        \n        categories.forEach(category => {\n            // Create individual card for each category\n            const categoryCard = document.createElement('div');\n            categoryCard.className = 'rating-category-card';\n            \n            const categoryName = document.createElement('div');\n            categoryName.className = 'category-name';\n            categoryName.setAttribute('data-category', category.key);\n            categoryName.textContent = category.label;\n            \n            const categoryRating = document.createElement('div');\n            categoryRating.className = 'category-rating';\n            \n            const ratingValue = ratings[category.key] || 0;\n            \n            // Create stars\n            const starsContainer = document.createElement('div');\n            starsContainer.className = 'rating-stars';\n            \n            for (let i = 1; i <= 5; i++) {\n                const star = document.createElement('i');\n                star.className = i <= ratingValue ? 'fas fa-star rating-star' : 'fas fa-star rating-star empty';\n                starsContainer.appendChild(star);\n            }\n            \n            // Rating value\n            const valueSpan = document.createElement('span');\n            valueSpan.className = 'rating-value';\n            valueSpan.textContent = `(${ratingValue}/5)`;\n            \n            categoryRating.appendChild(starsContainer);\n            categoryRating.appendChild(valueSpan);\n            \n            categoryCard.appendChild(categoryName);\n            categoryCard.appendChild(categoryRating);\n            rightContainer.appendChild(categoryCard);\n        });\n        \n        // Add comments section to the rightContainer if comments exist\n        if (comments && comments.trim() !== '') {\n            const commentsSection = document.createElement('div');\n            commentsSection.className = 'rating-comments-section';\n            \n            const commentsHeader = document.createElement('div');\n            commentsHeader.className = 'comments-header';\n            commentsHeader.innerHTML = '<i class=\"fas fa-comment-alt\"></i> Additional Comments';\n            \n            const commentsText = document.createElement('div');\n            commentsText.className = 'comments-text';\n            commentsText.textContent = comments;\n            \n            commentsSection.appendChild(commentsHeader);\n            commentsSection.appendChild(commentsText);\n            rightContainer.appendChild(commentsSection);\n        }\n        \n        // Assemble the two-column layout\n        twoColumnContainer.appendChild(leftContainer);\n        twoColumnContainer.appendChild(rightContainer);\n        container.appendChild(twoColumnContainer);\n        \n        return container;\n    }\n\n    // Create modern comments section\n    static createModernCommentsSection(comments) {\n        if (!comments || comments.trim() === '') {\n            return null;\n        }\n        \n        const commentsSection = document.createElement('div');\n        commentsSection.className = 'rating-comments-section';\n        \n        const commentsHeader = document.createElement('div');\n        commentsHeader.className = 'comments-header';\n        commentsHeader.innerHTML = '<i class=\"fas fa-comment-alt\"></i> Additional Comments';\n        \n        const commentsText = document.createElement('div');\n        commentsText.className = 'comments-text';\n        commentsText.textContent = comments;\n        \n        commentsSection.appendChild(commentsHeader);\n        commentsSection.appendChild(commentsText);\n        \n        return commentsSection;\n    }\n}\n\n// Export the UIUtils class\nexport { UIUtils };\n\n// For backward compatibility (can be removed later)\nwindow.UIUtils = UIUtils;\n","// Date Utility Functions\nclass DateUtils {\n    // Parse DD/MM/YYYY or DD/MM/YY format\n    static parseDate(dateString) {\n        const parts = dateString.split('/');\n        let year = parseInt(parts[2]);\n        \n        // Handle YY format by converting to YYYY\n        if (year < 100) {\n            year += year < 50 ? 2000 : 1900; // Assume years 00-49 are 20xx, 50-99 are 19xx\n        }\n        \n        return new Date(year, parts[1] - 1, parts[0]);\n    }\n\n    // Format for HTML date input (YYYY-MM-DD)\n    static formatDateForInput(date) {\n        return date.toISOString().split('T')[0];\n    }\n\n    // Format as DD/MM/YYYY\n    static formatDateForDisplay(date) {\n        return date.toLocaleDateString(CONFIG.DATE_FORMAT);\n    }\n\n    // Format as DD/MM/YY (compact format)\n    static formatDateCompact(date) {\n        const day = String(date.getDate()).padStart(2, '0');\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const year = String(date.getFullYear()).slice(-2);\n        return `${day}/${month}/${year}`;\n    }\n\n    // Parse and format date string to compact format\n    static formatDateStringCompact(dateString) {\n        if (!dateString) return '';\n        \n        let date;\n        \n        // Convert to string if it's not already\n        const dateStr = String(dateString).trim();\n        \n        if (dateStr.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n            // Handle YYYY-MM-DD format from HTML date input\n            date = new Date(dateStr);\n        } else if (dateStr.includes('/')) {\n            // Handle DD/MM/YYYY or DD/MM/YY format\n            const parts = dateStr.split('/');\n            if (parts.length === 3) {\n                // Always assume DD/MM/YYYY or DD/MM/YY format\n                let year = parseInt(parts[2]);\n                \n                // Handle YY format by converting to YYYY\n                if (year < 100) {\n                    year += year < 50 ? 2000 : 1900;\n                }\n                \n                date = new Date(year, parts[1] - 1, parts[0]);\n            }\n        } else if (dateStr.includes('T') || dateStr.match(/\\d{4}-\\d{2}-\\d{2}/)) {\n            // Handle ISO timestamp format (2025-03-02T18:30:00.000Z) or YYYY-MM-DD format\n            date = new Date(dateStr);\n        } else if (dateStr.match(/^\\d+$/)) {\n            // Handle Unix timestamp\n            date = new Date(parseInt(dateStr));\n        } else if (dateStr.includes('-') && dateStr.length >= 8) {\n            // Handle various dash-separated formats\n            date = new Date(dateStr);\n        } else {\n            // Try parsing as-is\n            date = new Date(dateStr);\n        }\n        \n        // Check if date is valid\n        if (isNaN(date.getTime())) {\n            console.warn('Invalid date format:', dateString);\n            return dateString; // Return original if can't parse\n        }\n        \n        return DateUtils.formatDateCompact(date);\n    }\n\n    // Set date constraints for inputs\n    static setDateConstraints() {\n        const today = new Date();\n        const maxDate = DateUtils.formatDateForInput(today);\n        \n        // Set max date as today for both inputs\n        domElements.startDateInput.max = maxDate;\n        domElements.endDateInput.max = maxDate;\n        \n        if (appState.existingReviewPeriods.length > 0) {\n            // Find the latest end date\n            const latestEndDate = appState.existingReviewPeriods.reduce((latest, period) => {\n                const periodEndDate = DateUtils.parseDate(period.endDate);\n                return periodEndDate > latest ? periodEndDate : latest;\n            }, new Date(0));\n            \n            // Start date must be after latest end date\n            const minStartDate = new Date(latestEndDate);\n            minStartDate.setDate(minStartDate.getDate() + 1);\n            domElements.startDateInput.min = DateUtils.formatDateForInput(minStartDate);\n        } else {\n            // No existing reviews, can start from any past date\n            domElements.startDateInput.min = CONFIG.MINIMUM_DATE;\n        }\n    }\n\n    // Validate date range\n    static validateDateRange() {\n        const startDate = new Date(domElements.startDateInput.value);\n        const endDate = new Date(domElements.endDateInput.value);\n        \n        UIUtils.hideError(domElements.dateRangeError);\n        \n        if (!domElements.startDateInput.value || !domElements.endDateInput.value) {\n            return false;\n        }\n        \n        // Check if end date is after start date\n        if (endDate <= startDate) {\n            UIUtils.showDateError('End date must be after start date');\n            return false;\n        }\n        \n        // Check minimum period (exactly 90 days)\n        const daysDifference = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));\n        if (daysDifference < CONFIG.MINIMUM_REVIEW_PERIOD_DAYS) {\n            UIUtils.showDateError(`Review period must be at least ${CONFIG.MINIMUM_REVIEW_PERIOD_DAYS} days`);\n            return false;\n        }\n        \n        // Check for overlaps with existing periods\n        const hasOverlap = appState.existingReviewPeriods.some(period => {\n            const periodStart = DateUtils.parseDate(period.startDate);\n            const periodEnd = DateUtils.parseDate(period.endDate);\n            \n            return (startDate <= periodEnd && endDate >= periodStart);\n        });\n        \n        if (hasOverlap) {\n            UIUtils.showDateError('Date range overlaps with existing review period');\n            return false;\n        }\n        \n        return true;\n    }\n\n    // Setup date input event handlers\n    static setupDateInputHandlers() {\n        domElements.startDateInput.addEventListener('change', function() {\n            if (domElements.startDateInput.value) {\n                // Set minimum end date to start date + minimum period\n                const startDate = new Date(domElements.startDateInput.value);\n                const minEndDate = new Date(startDate);\n                minEndDate.setDate(minEndDate.getDate() + CONFIG.MINIMUM_REVIEW_PERIOD_DAYS);\n                domElements.endDateInput.min = DateUtils.formatDateForInput(minEndDate);\n            }\n            \n            if (domElements.startDateInput.value && domElements.endDateInput.value) {\n                domElements.proceedWithDatesBtn.disabled = !DateUtils.validateDateRange();\n            }\n        });\n\n        domElements.endDateInput.addEventListener('change', function() {\n            if (domElements.startDateInput.value && domElements.endDateInput.value) {\n                domElements.proceedWithDatesBtn.disabled = !DateUtils.validateDateRange();\n            }\n        });\n    }\n}\n\n// Export the DateUtils class\nexport { DateUtils };\n\n// For backward compatibility (can be removed later)\nwindow.DateUtils = DateUtils;\n"],"names":["window","UIUtils","showLoading","message","messageElement","domElements","loadingOverlay","querySelector","textContent","classList","add","hideLoading","remove","showError","errorElement","style","display","hideError","showDateError","dateRangeError","resetForm","form","reset","clearFormErrorHighlighting","querySelectorAll","forEach","group","validateRequiredFields","fields","hasError","field","value","trim","setCenteredBodyStyle","setBodyStyle","height","alignItems","justifyContent","setScrollableBodyStyle","minHeight","overflow","createStarRating","rating","maxRating","starsHtml","i","concat","createRatingTable","ratings","categories","RATING_CATEGORIES","table","document","createElement","width","borderCollapse","marginBottom","thead","headerRow","categoryHeader","border","padding","backgroundColor","textAlign","ratingHeader","appendChild","tbody","category","row","categoryCell","label","ratingCell","ratingValue","key","innerHTML","createDropdown","options","onSelect","placeholder","disableIfSingle","dropdownContainer","className","dropdownButton","type","shouldDisable","length","cleanPlaceholder","replace","cursor","opacity","disabled","dropdownMenu","option","index","menuItem","text","addEventListener","hasArrow","includes","e","stopPropagation","isVisible","container","button","menu","createModernRatingDisplay","raterInfo","comments","twoColumnContainer","leftContainer","infoHeader","raterRow","raterLabel","raterValue","name","raterType","dateRow","dateLabel","dateValue","date","rightContainer","categoryCard","categoryName","setAttribute","categoryRating","starsContainer","star","valueSpan","commentsSection","commentsHeader","commentsText","createModernCommentsSection","DateUtils","parseDate","dateString","parts","split","year","parseInt","Date","formatDateForInput","toISOString","formatDateForDisplay","toLocaleDateString","CONFIG","DATE_FORMAT","formatDateCompact","day","String","getDate","padStart","month","getMonth","getFullYear","slice","formatDateStringCompact","dateStr","match","isNaN","getTime","setDateConstraints","today","maxDate","startDateInput","max","endDateInput","appState","existingReviewPeriods","latestEndDate","reduce","latest","period","periodEndDate","endDate","minStartDate","setDate","min","MINIMUM_DATE","validateDateRange","startDate","Math","ceil","MINIMUM_REVIEW_PERIOD_DAYS","some","periodStart","periodEnd","setupDateInputHandlers","minEndDate","proceedWithDatesBtn"],"mappings":"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"}